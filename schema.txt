-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.active_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  project_id uuid NOT NULL,
  file_id uuid,
  cursor_position jsonb,
  selection_range jsonb,
  last_activity timestamp with time zone DEFAULT now(),
  session_token character varying NOT NULL UNIQUE,
  CONSTRAINT active_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT active_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT active_sessions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT active_sessions_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.project_files(id)
);
CREATE TABLE public.chat_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  room_id uuid NOT NULL,
  user_id uuid NOT NULL,
  content text NOT NULL,
  message_type character varying DEFAULT 'text'::character varying,
  metadata jsonb DEFAULT '{}'::jsonb,
  reply_to_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  is_deleted boolean DEFAULT false,
  CONSTRAINT chat_messages_pkey PRIMARY KEY (id),
  CONSTRAINT chat_messages_reply_to_id_fkey FOREIGN KEY (reply_to_id) REFERENCES public.chat_messages(id),
  CONSTRAINT chat_messages_room_id_fkey FOREIGN KEY (room_id) REFERENCES public.chat_rooms(id),
  CONSTRAINT chat_messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.chat_rooms (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  name character varying DEFAULT 'General'::character varying,
  room_type character varying DEFAULT 'project'::character varying,
  file_id uuid,
  created_by uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT chat_rooms_pkey PRIMARY KEY (id),
  CONSTRAINT chat_rooms_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT chat_rooms_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT chat_rooms_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.project_files(id)
);
CREATE TABLE public.file_operations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  file_id uuid NOT NULL,
  user_id uuid NOT NULL,
  operation_type character varying NOT NULL,
  position jsonb NOT NULL,
  content text,
  length integer,
  timestamp timestamp with time zone DEFAULT now(),
  operation_id character varying NOT NULL,
  CONSTRAINT file_operations_pkey PRIMARY KEY (id),
  CONSTRAINT file_operations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT file_operations_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.project_files(id)
);
CREATE TABLE public.file_versions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_version_id uuid NOT NULL,
  file_id uuid NOT NULL,
  content text,
  content_hash character varying,
  change_type character varying NOT NULL,
  old_path text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT file_versions_pkey PRIMARY KEY (id),
  CONSTRAINT file_versions_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.project_files(id),
  CONSTRAINT file_versions_project_version_id_fkey FOREIGN KEY (project_version_id) REFERENCES public.project_versions(id)
);
CREATE TABLE public.project_files (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  name character varying NOT NULL,
  path text NOT NULL,
  content text,
  file_type character varying,
  mime_type character varying,
  size_bytes bigint DEFAULT 0,
  parent_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT project_files_pkey PRIMARY KEY (id),
  CONSTRAINT project_files_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT project_files_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.project_files(id),
  CONSTRAINT project_files_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.project_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role character varying NOT NULL DEFAULT 'viewer'::character varying,
  joined_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_members_pkey PRIMARY KEY (id),
  CONSTRAINT project_members_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.users(id),
  CONSTRAINT project_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT project_members_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.project_tags (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  name character varying NOT NULL,
  color character varying DEFAULT '#6366f1'::character varying,
  CONSTRAINT project_tags_pkey PRIMARY KEY (id),
  CONSTRAINT project_tags_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.project_versions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  version_number integer NOT NULL,
  commit_hash character varying NOT NULL UNIQUE,
  commit_message text,
  author_id uuid NOT NULL,
  parent_version_id uuid,
  is_main_branch boolean DEFAULT true,
  branch_name character varying DEFAULT 'main'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_versions_pkey PRIMARY KEY (id),
  CONSTRAINT project_versions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT project_versions_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.users(id),
  CONSTRAINT project_versions_parent_version_id_fkey FOREIGN KEY (parent_version_id) REFERENCES public.project_versions(id)
);
CREATE TABLE public.projects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  owner_id uuid NOT NULL,
  is_public boolean DEFAULT false,
  template_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT projects_pkey PRIMARY KEY (id),
  CONSTRAINT projects_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.users(id),
  CONSTRAINT projects_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.projects(id)
);
CREATE TABLE public.sharing_permissions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  role text NOT NULL DEFAULT 'viewer',
  share_token character varying UNIQUE,
  expires_at timestamp with time zone,
  created_by uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  is_active boolean DEFAULT true,
  CONSTRAINT sharing_permissions_pkey PRIMARY KEY (id),
  CONSTRAINT sharing_permissions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT sharing_permissions_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.trigger_log (
  id integer NOT NULL DEFAULT nextval('trigger_log_id_seq'::regclass),
  event_type text,
  user_id uuid,
  user_email text,
  raw_data jsonb,
  created_at timestamp with time zone DEFAULT now(),
  error_message text,
  CONSTRAINT trigger_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_preferences (
  user_id uuid NOT NULL,
  theme character varying DEFAULT 'dark'::character varying,
  editor_settings jsonb DEFAULT '{}'::jsonb,
  notification_settings jsonb DEFAULT '{}'::jsonb,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_preferences_pkey PRIMARY KEY (user_id),
  CONSTRAINT user_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying NOT NULL UNIQUE,
  username character varying NOT NULL UNIQUE,
  display_name character varying,
  avatar_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_active_at timestamp with time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
